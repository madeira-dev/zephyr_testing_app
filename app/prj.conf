CONFIG_LOG=y
CONFIG_ZTEST=y
# CONFIG_ZTEST_NEW_API=y
CONFIG_LOG_DEFAULT_LEVEL=2
CONFIG_MAIN_STACK_SIZE=4096

# Enable library's main switch
CONFIG_HELLO_LIB=y

# Enable entropy and hardware RNG for nRF52840
CONFIG_ENTROPY_GENERATOR=y
CONFIG_ENTROPY_NRF5_RNG=y
CONFIG_TEST_RANDOM_GENERATOR=n

# cpp configs to use cereal
# enable cpp
CONFIG_CPP=y

# enable c++11 standard
CONFIG_STD_CPP11=y

# enable the full C++ standard library (STL)
CONFIG_REQUIRES_FULL_LIBCPP=y

# enable exceptions in case cereal uses them
CONFIG_CPP_EXCEPTIONS=y

# Enable random number generation
# CONFIG_NRFX_RNG=y

# CONFIG_ENTROPY_GENERATOR=y
# CONFIG_TEST_RANDOM_GENERATOR=y
# CONFIG_ENTROPY_NRF5_RNG=n

### last one suggested: ###
### c-core onlye ###
# CPU/FPU
# CONFIG_CPU_CORTEX_M4=y
# CONFIG_FPU=y

# # Logging (optional; keep minimal in PoC)
# CONFIG_LOG=y
# CONFIG_LOG_DEFAULT_LEVEL=2

# # Console (optional)
# CONFIG_UART_CONSOLE=y

# # RNG/Entropy (use nRF RNG via Zephyr entropy API)
# CONFIG_ENTROPY_GENERATOR=y
# CONFIG_ENTROPY_NRF5_RNG=y

# # Heap if you use k_malloc for the mempool bootstrap
# CONFIG_HEAP_MEM_POOL_SIZE=65536

# # Stack sizes (FFT uses doubles & recursion-free loops but large frames if not careful)
# CONFIG_MAIN_STACK_SIZE=8192

### If you compile the on-device C++ bridge with cereal (binary archive only): ###
# C++
# CONFIG_CPLUSPLUS=y
# CONFIG_LIB_CPLUSPLUS=y
# CONFIG_EXCEPTIONS=n
# CONFIG_RTTI=n

# # Newlib often required when using libstdc++ streams; try nano first
# CONFIG_NEWLIB_LIBC=y
# CONFIG_NEWLIB_LIBC_NANO=y

# # I/O streams support (if you use stringstream/iostream)
# CONFIG_MINIMAL_LIBC_NANO=n
# CONFIG_CPP_STATIC_LIBSTDCPP=y  # toolchain-dependent; prefer static if available
